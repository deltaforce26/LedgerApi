// <auto-generated />
using System;
using LedgerApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LedgerApi.Migrations
{
    [DbContext(typeof(LedgerApiContext))]
    partial class LedgerApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LedgerApi.Model.Expenses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LedgerId")
                        .HasColumnType("int");

                    b.Property<int>("PaidByUserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LedgerId");

                    b.HasIndex("PaidByUserID");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("LedgerApi.Model.Ledger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateCreated")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ledger");
                });

            modelBuilder.Entity("LedgerApi.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("LedgerUser", b =>
                {
                    b.Property<int>("LedgersId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("LedgersId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("LedgerUser");
                });

            modelBuilder.Entity("LedgerApi.Model.Expenses", b =>
                {
                    b.HasOne("LedgerApi.Model.Ledger", "Ledger")
                        .WithMany("Transactions")
                        .HasForeignKey("LedgerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LedgerApi.Model.User", "PaidByUser")
                        .WithMany("Expenses")
                        .HasForeignKey("PaidByUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ledger");

                    b.Navigation("PaidByUser");
                });

            modelBuilder.Entity("LedgerUser", b =>
                {
                    b.HasOne("LedgerApi.Model.Ledger", null)
                        .WithMany()
                        .HasForeignKey("LedgersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LedgerApi.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LedgerApi.Model.Ledger", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("LedgerApi.Model.User", b =>
                {
                    b.Navigation("Expenses");
                });
#pragma warning restore 612, 618
        }
    }
}
